/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
// apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'application'
apply plugin : 'eclipse'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
  //  jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
  //  api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
 //   implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
 //   testImplementation 'junit:junit:4.12'
       
    compile 'commons-cli:commons-cli:1.3'
    compile 'org.apache.poi:poi-ooxml:3.15'
        
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.5.3'
    compile group: 'org.apache.poi', name: 'poi', version: '3.15'
    compile group: 'com.relevantcodes', name: 'extentreports', version: '2.+'
    
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    
  
     
        
}

compileJava {
    options.warnings = false
    options.deprecation = false
    options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn","-Xlint:deprecation"]
}

tasks.withType(JavaCompile) {
    println 'Compiler args: ' + options.compilerArgs
}


task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Selenium - Maximo',  
        	'Implementation-Version': 1.0,
        	'Main-Class': 'workitemui.Launcher'
    }
    baseName = project.name 
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}


mainClassName = 'workitemui.Launcher'